# 收集nginx日志
input {
	file {
		codec => "plain"
		discover_interval => 15
		# exclude => ... # array (optional)
		path => ["/home/chaos/workspace/nginx/logs/access_message_server.log*" ]
		sincedb_path => "/home/chaos/workspace/logstash/sincedb-access_message_server"
		sincedb_write_interval => 1
		start_position => "beginning"
		stat_interval => 1
		# tags => ... # array (optional)
		type => nginx_log
	}
}
filter {
	if [type] =~ "nginx_log" {
		grok {
		    match => {
		        "message" => "%{COMBINEDAPACHELOG} %{GREEDYDATA:session_id} %{GREEDYDATA:cookie_id} %{GREEDYDATA:session_start_time} %{GREEDYDATA:forward_ip}"
		   		"path" => "/home/%{USERNAME:host_user}/.*/access\.(%{GREEDYDATA:service_name}\.|)log"
			}
		    break_on_match => false
		}
		mutate {
			remove_field => "message"
		}
		grok {
		    match => {
		        "agent" => ".*NetType/%{DATA:netType}(\s+|\"|$)"
			}
		    break_on_match => false
		}
		if [agent] =~ "MicroMessenger" {
			mutate {
			    add_field => [ "[params][source]", "wechat" ]
			    add_field => [ "[params][platform]", "mobile" ]
			}
		} else {
			mutate {
			    add_field => [ "[params][source]", "pc" ]
				# default is pc
			    add_field => [ "[params][platform]", "pc" ]
			}
		}
		date {
			match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
		}
		# split request to key value pairs
		kv {
		    field_split => "&?"
		    # include_keys => [ "from", "to" ] # only include the keys
		    # prefix => "arg_" # only include the keys with suce prifix
		    source => "request"
		    target => "params" # which field to put into
		    # trim => "<>\[\]," # trim chars
		    # trimkey => "<>\[\],"
		    value_split => "="
		    remove_field => "request"
		}
		# todo: drop the message not sent by me
		# if [clientip] != "203.119.80.236" {
		# 	drop {}
		# }
		# url decode action
		if [params][action_name] {
			urldecode {field => "[params][action_name]"}
		}
		if [params][url]  {
			urldecode {field 	=> "[params][url]"}
			if [params][url] =~ /\/.*\/mobile\/.*/ {
				mutate {
					update => {"[params][platform]" => "mobile" }
				}

			}
		}
		if [params][urlref]  {
			urldecode {field => "[params][urlref]"}
		}
		if [params][c_i]  {
			urldecode {field => "[params][c_i]"}
		}
		if [params][c_n]  {
			urldecode {field => "[params][c_n]"}
		}
		if [params][c_p]  {
			urldecode {field => "[params][c_p]"}
		}
		if [params][c_t]  {
			urldecode {field => "[params][c_t]"}
		}
		if [params][e_v]  {
			urldecode {field => "[params][e_v]"}
			# resolve [params][e_v] to key value pairs
			kv {
			    field_split => "&"
			    # include_keys => [ "from", "to" ] # only include the keys
			    # prefix => "arg_" # only include the keys with suce prifix
			    source => "[params][e_v]"
			    target => "[params][e_v]" # which field to put into
			    # trim => "<>\[\]," # trim chars
			    # trimkey => "<>\[\],"
			    value_split => "="
			}
			if [params][e_v][url] {
				urldecode {field => "[params][e_v][url]"}
			}
		}
		# 解析params.data数据
		if [params][data] {
			urldecode {field => "[params][data]" }
			json {
				source => "[params][data]"
				target => "[params][data]"
			}
		}
		if [agent] != "-" and [agent] !="" {
		    useragent {
				add_tag => [ "UA" ]
				source => "agent"
				prefix => "ua_"
		    }
		}
		# if "UA" in [tags] {
		# 	# if [ua_device] == "Other" { mutate { remove_field => "ua_device" } }
		# 	if [ua_name]   == "Other" { mutate { remove_field => "ua_name" } }
		# 	if [ua_os]     == "Other" { mutate { remove_field => "ua_os" } }
		# 	if [ua_os_name]     == "Other" { mutate { remove_field => "ua_os_name" } }
		# 	mutate {
		# 		remove_field => [  "ua_minor", "ua_patch", "ua_os"]
		# 	}
		# }
		# 添加地理信息
		if [forward_ip] != "-" and [forward_ip] != "" {
			mutate {
				add_field => { old_client_ip => "%{clientip}" }
			}
			mutate {
				replace => { clientip => "%{forward_ip}"}
			}
		}
		geoip {
			source => "clientip"
			target => "geoip"
			database => "/home/chaos/software/logstash-1.5.4/vendor/geoip/GeoLiteCity.dat"
			# add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
			# add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
		}
		mutate {
			remove_field => [  "@version", "ident", "auth", "[params][rec]", "[params][r]",
			"[params][h]", "[params][m]", "[params][s]", "[params][_id]", "[params][_idts]", "[params][_idvc]",
			"[params][_refts]","[params][_idn]", "[params][_viewts]", "[params][send_image]", "[params][pdf]",
			"[params][qt]", "[params][realp]", "[params][realp]", "[params][wma]", "[params][dir]", "[params][fla]",
			"[params][gears]", "[params][ag]", "[params][cookie]", "[params][res]", "[params][gt_ms]",
			"tags", "[geoip][location]", "[geoip][ip]"
			]
		}
	}
}

output {
	stdout { codec => rubydebug }
 	if [params][idsite] == "1" {
		http {
			codec => 'plain'
			content_type => 'application/json'
			format => 'json'
			# headers => {}
			http_method => 'post'
			# mapping => {}
			url => 'http://192.168.249.8:9020/rest/message'
		}
	}
 	if [params][idsite] == "2" {
        #stdout { codec => rubydebug }
        redis {
             batch => true
            #batch_events => ... # number (optional), default: 50
            #batch_timeout => ... # number (optional), default: 5
            #codec => ... # codec (optional), default: "plain"
            congestion_interval => 1
            congestion_threshold => 1000
            #data_type => ... # string, one of ["list", "channel"] (optional)
            data_type => list
            db => 0
            host => [ "chaos-04:8801" ]
            key => "logstash-eqs-spv"
            #password => ... # password (optional)
            #port => ... # number (optional), default: 6379
            #reconnect_interval => ... # number (optional), default: 1
            #shuffle_hosts => ... # boolean (optional), default: true
        	#timeout => ... # number (optional), default: 5
            #workers => ... # number (optional), default: 1
        }
    }
	# kafka {
	# # 	codec => avro {
	# # 		schema_uri => "/home/chaos/workspace/logstash/conf/message.avsc"
	# #   }
	# 	codec => json_lines
	# 	broker_list => "kfk01:9092,kfk02:9092,kfk03:9092"
	# 	topic_id => "message-server"
	# }
}
